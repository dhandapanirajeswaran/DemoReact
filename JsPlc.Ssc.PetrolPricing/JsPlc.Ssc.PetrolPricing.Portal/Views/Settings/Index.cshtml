@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.SystemSettings.SystemSettingsViewModel

@{
        ViewBag.Title = "Edit System Settings";


        var decimalRoundingOptions = new List<SelectListItem>() {
            new SelectListItem() { Text = "None", Value = "-1" },
            new SelectListItem() { Text = ".0", Value = "0" },
            new SelectListItem() { Text = ".1", Value = "1" },
            new SelectListItem() { Text = ".2", Value = "2" },
            new SelectListItem() { Text = ".3", Value = "3" },
            new SelectListItem() { Text = ".4", Value = "4" },
            new SelectListItem() { Text = ".5", Value = "5" },
            new SelectListItem() { Text = ".6", Value = "6" },
            new SelectListItem() { Text = ".7", Value = "7" },
            new SelectListItem() { Text = ".8", Value = "8" },
            new SelectListItem() { Text = ".9", Value = "9" }
    };
}

<div class="row">
    <div class="col-md-10">
        <h1>
            <i class="fa fa-cogs"> System Settings</i>
        </h1>
    </div>
    <div class="col-md-1 newline">
        <a href="@Url.Action("ImportSettings", "Settings")" class="btn btn-primary" data-infotip="Import the [b]Settings[/b]"><i class="fa fa-upload"></i> Import</a>
    </div>
    <div class="col-md-1 newline">
        <a  id="btnExportSettings" class="btn btn-primary" href="@Url.Action("ExportSettings", "Settings")" data-infotip="Export all the [b]Settings[/b]"><i class="fa fa-download"></i> Export</a>
    </div>
</div>

<ul class="nav nav-tabs nav-condensed">
    <li class="active"><a href="@Url.Action("Index", "Settings")"><i class="fa fa-cogs"></i> Common Settings</a></li>
    <li><a href="@Url.Action("DriveTime", "Settings")"><i class="fa fa-clock-o"></i> Drive Time</a></li>
    <li><a href="@Url.Action("Brands", "Settings")"><i class="fa fa-apple"></i> Brands &amp; Grocers</a></li>
    <li><a href="@Url.Action("Schedule", "Settings")"><i class="fa fa-calendar"></i> Email Schedule</a></li>
    <li><a href="@Url.Action("PriceFreeze", "Settings")"><i class="fa fa-hourglass-start"></i> Price Freeze Events</a></li>
</ul>

<style>
    .alt-row {
        background-color: #f0f0f0 ;
        border-top: 1px solid #ccc; 
        margin-top: 1em;
        border-bottom: 1px solid #ccc; 
        margin-bottom: 1em;
        padding-bottom: 1em;
    }

    .mono-font > option {
        font-family: monospace;
    }

    .section-row {
        background: #dff0d8;
        color: #3c763d;
        border-bottom: 1px solid #3c763d;
        margin-top: 1em;
        line-height: 3em;
    }

    .table.table-no-margins {
        margin: 0;
    }

    .live-email-enabled {
        color: red;
    }
    .live-email-disabled {
        color: green;
    }

    #SiteTestEmailList {
        background: #dff0d8;
        padding: 4px;
        margin: 4px 14px 8px 14px;
        width: 100%;
    }


</style>

@Html.ValidationSummary(false)

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <input type="hidden" name="Id" value="@(Model.Id)" />

            <div id="divUnsavedChanges" style="display: none;">
                <br />
                <div class="alert alert-danger">
                    <div class="row">
                        <div class="col-md-10">
                            <span class="font125pc">
                                <i class="fa fa-warning pulse-size"></i> <strong>Warning:</strong> You have unsaved changes.
                            </span>
                        </div>

                        <div class="col-md-2 text-right">
                            <button type="submit" class="btn btn-primary"><i class="fa fa-check"> Save Settings</i></button>
                        </div>
                    </div>
                </div>
            </div>

            <fieldset>

                <div class="row section-row">
                    <div class="col-md-12 text-center font125pc" data-infotip="These settings controls how [b]Site Emails[/b] are sent out"><i class="fa fa-info-circle"></i> <strong>Site Email Settings</strong></div>
                </div>

                <div class="row">

                    <div class="col-md-5 col-md-offset-1">
                        <label class="control-label">Send <strong>LIVE</strong> Site Emails</label><br />
                        <select class="form-control" id="EnableSiteEmails" name="EnableSiteEmails" data-infotip="[b]Enable[/b] the sending of [b]Site Emails[/b]">
                            <option value="false" @(!Model.EnableSiteEmails ? " selected='selected'" : "")>OFF</option>
                            <option value="true" @(Model.EnableSiteEmails ? " selected='selected'" : "") class="text-danger">ON - Send to the LIVE emails!</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.EnableSiteEmails, "", new { @class = "text-danger" })
                        <div id="divTestEmailInfo" class="alert alert-info" style="display: none; margin-top: 4px;">
                            <i class="fa fa-info-circle"></i>
                            Emails will be sent out the <strong>Testing Email Addresses</strong>. See here <i class="fa fa-arrow-right"></i>
                        </div>
                        <div id="divLiveEmailInfo" class="alert alert-danger" style="display: none; margin-top: 4px;">
                            <i class="fa fa-warning"></i>
                            <strong>Note: </strong> Emails will be sent out to the <strong class="text-danger">LIVE</strong> Email addresses!
                        </div>
                    </div>

                    <div class="col-md-5" style="border-left: 2px dashed #999;">
                        <label class="control-label">Testing Email Addresses</label>
                        <input type="hidden" id="SiteEmailTestAddresses" name="SiteEmailTestAddresses" value="@(Model.SiteEmailTestAddresses)" />

                        <div class="site-test-emails-panel">
                            <div id="SiteTestEmailList"></div>
                            <div class="site-test-email-controls">
                                <div class="col-md-11">
                                    <div class="input-group">
                                        <input type="text" id="txtSiteTestEmail" value="" class="form-control mono-font" data-infotip="Please enter an [b]Email[/b][br /]Tip: [em]@@Sainsburys.co.uk[/em] will be added automatically" />
                                        <span class="input-group-addon">@@Sainsburys.co.uk</span>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <button id="btnSiteTestEmailAdd" type="button" class="btn btn-primary"><i class="fa fa-plus"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 col-md-offset-3">
                        <label class="control-label">Prefix Email Subject line with</label>
                            @Html.EditorFor(model => model.EmailSubjectLinePrefix, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "Each [b]Email[/b] will have its [b]Subject line[/b] starting with this text" } })
                        @Html.ValidationMessageFor(model => model.EmailSubjectLinePrefix, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />

                <div class="row section-row">
                    <div class="col-md-12 text-center font125pc" data-infotip="These are the [b]Common System Settings[/b]"><i class="fa fa-info-circle"></i> <strong>Common System Settings</strong></div>
                </div>

                <div class="row">
                    <div class="col-md-2">
                        <label class="control-label">Nearby Grocer Drive Time</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxGrocerDriveTimeMinutes, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Nearby Grocer[/b] Drive Time[br](e.g. [u]5[/u] minute Drive Time)" } })
                            <div class="input-group-addon"><strong>Mins</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxGrocerDriveTimeMinutes, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-1">
                        <label class="control-label">Price Change Variance</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.PriceChangeVarianceThreshold, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Price Change Variance[/b] Threshold (e.g. 2.0)[br /]Price changes [q]less or equal to this +/- range[/q] will be [i]ignored[/i]" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.PriceChangeVarianceThreshold, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-1">
                        <label class="control-label">Decimal Rounding</label>
                        <div class="input-group">
                            <div class="input-group-addon">Price</div>
                            @Html.DropDownListFor(model => model.DecimalRounding, decimalRoundingOptions,  new { @class = "form-control mono-font", data_infotip = "This is the [q]Decimal Rounding[/q] used [br /]for the number after the decimal place[br /]E.g. [b]7[/b] for price [i]100.2[/i] will become [u]100.7[/u]" } )
                        </div>
                    </div>

                    <div class="col-md-2 col-md-offset-1">
                        <label class="control-label">Super-Unleaded Markup</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.SuperUnleadedMarkupPrice, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Markup[/b] amount for [b]Super-Unleaded[/b] (e.g. 5.0)[br /]This is the amount added to the [q]Unleaded[/q] price." } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.SuperUnleadedMarkupPrice, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-3 col-md-offset-2">
                        <label class="control-label">Show Upload DatePicker</label>
                        <select id="FileUploadDatePicker" name="FileUploadDatePicker" class="form-control full-width" data-infotip="Show the [b]DatePicker[/b] when [b]Uploading Files[/b]">
                            <option value="false" @(!Model.FileUploadDatePicker ? " selected='selected'" : "")>No</option>
                            <option value="true" @(Model.FileUploadDatePicker ? " selected='selected'" : "")>Yes</option>
                        </select>
                    </div>

                    <div class="col-md-3 col-md-offset-2">
                        <label class="control-label">Maximum Competitor Drive Time</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.CompetitorMaxDriveTime, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Max[/b] Drive Time for [b]All Competitors[/b][br /](e.g. 25 Minutes)" } })
                            <span class="input-group-addon"><strong>Minutes</strong></span>
                        </div>
                    </div>

                </div>

            </fieldset>

            <fieldset>
                <div class="row section-row">
                    <div class="col-md-12 text-center font125pc" data-infotip="These are the [b]Override Price[/b] absolute Min/Max limits and warning range."><i class="fa fa-info-circle"></i> <strong>Price Overrides limits and warnings</strong></div>
                </div>

                <div class="row newline">
                    <div class="col-md-4 col-md-offset-2 text-center font125pc text-danger" data-infotip="These are the [b]Absolute[/b] price limits[br /]Prices [i]cannot[/i] be saved if outside these limits"><i class="fa fa-info-circle"></i> <strong>Absolute Min/Max Prices</strong></div>
                    <div class="col-md-4 col-md-offset-2 text-center font125pc text-warning" data-infotip="These are [b]Warning[/b] indicators only[br /] You can still save price changes outside these limits"><i class="fa fa-info-circle"></i> <strong>Warning Indicators</strong></div>
                </div>


                <div class="row alt-row">
                    <div class="col-md-2 font125pc">
                        <span class="fuel-sign fuel-sign-unleaded"></span>
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Min Price</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinUnleadedPrice, new { htmlAttributes = new { @class = "form-control col-md-4 mono-font text-right", data_infotip = "The [b]Minimum[/b] Absolute Price for [b]Unleaded[/b] (e.g. 50.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max Price</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxUnleadedPrice, new { htmlAttributes = new { @class = "form-control col-md-4 mono-font text-right", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Unleaded[/b] (e.g. 400.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-2">
                        <label class="control-label">Min +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Minimum[/b] Price Change for [b]Unleaded[/b] (e.g. -3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Unleaded[/b] (e.g. 3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="row">
                    <div class="col-md-2 font125pc newline">
                        <span class="fuel-sign fuel-sign-diesel"></span>
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Min Price</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinDieselPrice, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Minimum[/b] Absolute Price for [b]Diesel[/b] (e.g. 50.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinDieselPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max Price</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxDieselPrice, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Diesel[/b] (e.g. 400.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxDieselPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-2">
                        <label class="control-label">Min +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinDieselPriceChange, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Minimum[/b] Price Change for [b]Diesel[/b] (e.g. -3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinDieselPriceChange, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max +/-  Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxDieselPriceChange, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Diesel[/b] (e.g. 3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxDieselPriceChange, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="row alt-row">
                    <div class="col-md-2 font125pc newline">
                        <span class="fuel-sign fuel-sign-super-unleaded"></span>
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Min Price</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinSuperUnleadedPrice, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Minimum[/b] Absolute Price for [b]Super-Unleaded[/b] (e.g. 50.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinSuperUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max Price</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxSuperUnleadedPrice, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Super-Unleaded[/b] (e.g. 400.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxSuperUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-2">
                        <label class="control-label">Min +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinSuperUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Minimum[/b] Price Change for [b]Super-Unleaded[/b] (e.g. -3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinSuperUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxSuperUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font text-right", data_infotip = "The [b]Maximum[/b] Change Price for [b]Super-Unleaded[/b] (e.g. 3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxSuperUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <br />

            <div class="form-group">
                <div class="col-md-4">
                    <a class="btn btn-default" href="@Url.Action("Index", "Home")"><i class="fa fa-backward"></i> Back to Home</a>
                </div>
                <div class="col-md-8 text-right">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-check"> Save Settings</i></button>
                </div>

                <div class="clear-fix"></div>
            </div>
        </div>
    }
</div>

<input type="hidden" id="hdnPageErrorMessage" value="@(Model.Status.ErrorMessage)" />
<input type="hidden" id="hdnPageSuccessMessage" value="@(Model.Status.SuccessMessage)" />

    <script type="text/javascript">
        require(["SystemSettings", "busyloader"],
            function (systemSettings, busyloader) {
                systemSettings.init();

                function exportSettingsClick() {
                    busyloader.show({
                        message: 'Exporting Settings. Please wait...',
                        showtime: 1000,
                        dull: true
                    });
                    window.location = "ExportSettings";
                };

                function bindEvents() {
                    $('#btnExportSettings').off().click(exportSettingsClick);
                };

                function docReady() {
                    bindEvents();
                };

                $(docReady);
            }
        );
    </script>


