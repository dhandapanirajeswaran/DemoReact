@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.SystemSettings.SystemSettingsViewModel

@{
    ViewBag.Title = "Edit System Settings";
}

<h1>
    <i class="fa fa-cogs"> System Settings</i>
</h1>

<ul class="nav nav-tabs nav-condensed">
    <li class="active"><a href="@Url.Action("Index", "Settings")"><i class="fa fa-cogs"></i> Common Settings</a></li>
    <li><a href="@Url.Action("DriveTime", "Settings")"><i class="fa fa-clock-o"></i> Drive Time</a></li>
</ul>


<style>
    .alt-row {
        background-color: #f0f0f0 ;
        border-top: 1px solid #ccc; 
        margin-top: 1em; 
        border-bottom: 1px solid #ccc; 
        margin-bottom: 1em;
        padding-bottom: 1em;
    }
</style>

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <input type="hidden" name="Id" value="@(Model.Id)" />

            <fieldset>
                <div class="row alt-row">
                    <div class="col-md-2 font125pc newline">
                        <span class="fuel-sign fuel-sign-unleaded"></span>
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Min Price</label>
                        <div class="input-group">
                            <div class="input-group-addon"><i class="fa fa-gbp"></i></div>
                            @Html.EditorFor(model => model.MinUnleadedPrice, new { htmlAttributes = new { @class = "form-control col-md-4 mono-font", data_infotip = "The [b]Minimum[/b] Absolute Price for [b]Unleaded[/b] (e.g. 50.0)" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.MinUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max Price</label>
                        <div class="input-group">
                            <div class="input-group-addon"><i class="fa fa-gbp"></i></div>
                            @Html.EditorFor(model => model.MaxUnleadedPrice, new { htmlAttributes = new { @class = "form-control col-md-4 mono-font", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Unleaded[/b] (e.g. 400.0)" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-2">
                        <label class="control-label">Min +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Minimum[/b] Price Change for [b]Unleaded[/b] (e.g. -3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Unleaded[/b] (e.g. 3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="row">
                    <div class="col-md-2 font125pc newline">
                        <span class="fuel-sign fuel-sign-diesel"></span>
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Min Price</label>
                        <div class="input-group">
                            <div class="input-group-addon"><i class="fa fa-gbp"></i></div>
                            @Html.EditorFor(model => model.MinDieselPrice, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Minimum[/b] Absolute Price for [b]Diesel[/b] (e.g. 50.0)" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.MinDieselPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max Price</label>
                        <div class="input-group">
                            <div class="input-group-addon"><i class="fa fa-gbp"></i></div>
                            @Html.EditorFor(model => model.MaxDieselPrice, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Diesel[/b] (e.g. 400.0)" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxDieselPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-2">
                        <label class="control-label">Min +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinDieselPriceChange, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Minimum[/b] Price Change for [b]Diesel[/b] (e.g. -3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinDieselPriceChange, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max +/-  Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxDieselPriceChange, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Diesel[/b] (e.g. 3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxDieselPriceChange, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="row alt-row">
                    <div class="col-md-2 font125pc newline">
                        <span class="fuel-sign fuel-sign-super-unleaded"></span>
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Min Price</label>
                        <div class="input-group">
                            <div class="input-group-addon"><i class="fa fa-gbp"></i></div>
                            @Html.EditorFor(model => model.MinSuperUnleadedPrice, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Minimum[/b] Absolute Price for [b]Super-Unleaded[/b] (e.g. 50.0)" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.MinSuperUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max Price</label>
                        <div class="input-group">
                            <div class="input-group-addon"><i class="fa fa-gbp"></i></div>
                            @Html.EditorFor(model => model.MaxSuperUnleadedPrice, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Maximum[/b] Absolute Price for [b]Super-Unleaded[/b] (e.g. 400.0)" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxSuperUnleadedPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-2">
                        <label class="control-label">Min +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MinSuperUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Minimum[/b] Price Change for [b]Super-Unleaded[/b] (e.g. -3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MinSuperUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        <label class="control-label">Max +/- Change</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxSuperUnleadedPriceChange, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Maximum[/b] Change Price for [b]Super-Unleaded[/b] (e.g. 3.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxSuperUnleadedPriceChange, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <div class="row">
                    <div class="col-md-2 col-md-offset-1">
                        <label class="control-label">Max Grocer Drive Time</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.MaxGrocerDriveTimeMinutes, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Maximum[/b] Grocer Drive Time" } })
                            <div class="input-group-addon"><strong>Mins</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.MaxGrocerDriveTimeMinutes, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3 col-md-offset-1">
                        <label class="control-label">Price Change Variance Threshold</label>
                        <div class="input-group">
                            <div class="input-group-addon"><strong>+/-</strong></div>
                            @Html.EditorFor(model => model.PriceChangeVarianceThreshold, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The Price Change Variance Threshold (e.g. 2.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.PriceChangeVarianceThreshold, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 col-md-offset-1">
                        <label class="control-label">Super-Unleaded Markup</label>
                        <div class="input-group">
                            @Html.EditorFor(model => model.SuperUnleadedMarkupPrice, new { htmlAttributes = new { @class = "form-control mono-font", data_infotip = "The [b]Markup[/b] amount for [b]Super-Unleaded[/b] (e.g. 5.0)" } })
                            <div class="input-group-addon"><strong>P</strong></div>
                        </div>
                        @Html.ValidationMessageFor(model => model.SuperUnleadedMarkupPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <br />

            <div class="form-group">
                <div class="col-md-4">
                    <a class="btn btn-default" href="@Url.Action("Index", "Home")"><i class="fa fa-backward"></i> Back to Home</a>
                </div>
                <div class="col-md-8 text-right">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-check"> Update Settings</i></button>
                </div>

                <div class="clear-fix"></div>
            </div>
        </div>
    }
</div>

    <script type="text/javascript">
        require(["infotips", "notify"],
            function (infotips, notify) {

                function docReady() {
                    var error = "@(Model.Status.ErrorMessage)",
                        success = "@(Model.Status.SuccessMessage)";

                    if (/\S/.test(error))
                        notify.error(error);

                    if (/\S/.test(success))
                        notify.success(success);
                };

                $(docReady);
            }
        );
    </script>


