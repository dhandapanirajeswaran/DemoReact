@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.DiagnosticsViewModel
@using JsPlc.Ssc.PetrolPricing.Core
@using JsPlc.Ssc.PetrolPricing.Portal.Helper.Extensions
@{
    ViewBag.Title = "Petrol Pricing Diagnostics";

    var totalDatabaseObjectCount = Model.DatabaseObjectSummary.DefaultConstraintCount
        + Model.DatabaseObjectSummary.ForeignKeyCount
        + Model.DatabaseObjectSummary.ScalarFunctionCount
        + Model.DatabaseObjectSummary.StoredProcedureCount
        + Model.DatabaseObjectSummary.PrimaryKeyCount
        + Model.DatabaseObjectSummary.TableFunctionCount
        + Model.DatabaseObjectSummary.UserTableCount
        + Model.DatabaseObjectSummary.TotalIndexCount;
}

@section head {
    <style>
        .divider-row {
            border-bottom: 4px solid #6f1f44;
            height: 4px;
        }

        .code-listing {
            width: 100%;
            overflow: auto;
            max-height: 10em;
        }

        .log-parameters-table th {
            padding: 2px;
        }

        .auto-horz-scroll {
            width: 54em;
            overflow: auto;
        }

        .mono {
            font-family: monospace;
        }

        .panel.collapsed .panel-body,
        .panel.collapsed .panel-footer {
            display: none;
        }

        [data-toggle-expand]:hover {
            cursor: pointer;
        }

        [data-expand-all],
        [data-collapse-all] {
            cursor: pointer;
            margin: 1px .5em;
        }
        big.badge {
            font-size: 125%;
        }

        .table-dividers {
            border-right: 1px solid #ccc;
            border-bottom: 1px solid #ccc;
        }
        .table-dividers th,
        .table-dividers td {
            border-left: 1px solid #ccc;
        }


    </style>
}

<div class="jumbotron" id="DiagnosticsPanelList">
    <h1 class="site-hero-text"><i class="fa fa-bug"></i> Diagnostics</h1>
    <p class="lead">Petrol Pricing Diagnostics</p>

    @using (Html.BeginForm("Index", "Diagnostics"))
    {
        @Html.AntiForgeryToken()

        <div class="expand-collapse-controls text-right">
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-default" data-expand-all="#DiagnosticsPanelList"><i class="fa fa-caret-square-o-down"></i> Expand All</button>
                <button type="button" class="btn btn-default" data-collapse-all="#DiagnosticsPanelList"><i class="fa fa-caret-square-o-down"></i> Collapse All</button>
            </div>
        </div>

        <div class="panel panel-default collapsed" id="ControlPanel">
            <div class="panel-heading">
                <h5 data-toggle-expand="#ControlPanel" data-infotip="Expand or Collapse panel">Control Panel <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
            </div>
            <div class="panel-body">
                <fieldset>
                    <legend>Dapper</legend>

                    <div class="container">
                        <div class="row">
                            <div class="col-md-1">
                                @if (Model.DiagnosticsSettings.Dapper_LogDatabaseCalls)
                                {
                                    <input type="checkbox" class="pull-left" name="Dapper_LogDatabaseCalls" id="Dapper_LogDatabaseCalls" value="True" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" class="pull-left" name="Dapper_LogDatabaseCalls" id="Dapper_LogDatabaseCalls" value="True" />
                                }
                            </div>
                            <div class="col-md-3">
                                <label for="Dapper_LogDatabaseCalls">Log Database Calls</label>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <hr />

                <fieldset>
                    <legend>Site Prices</legend>
                    <div class="container">
                        <div class="row">
                            <div class="col-md-1">
                                @if (Model.DiagnosticsSettings.SitePrices_UseStoredProcedure)
                                {
                                    <input type="checkbox" name="SitePrices_UseStoredProcedure" id="SitePrices_UseStoredProcedure" value="True" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="SitePrices_UseStoredProcedure" id="SitePrices_UseStoredProcedure" value="True" />
                                }
                            </div>
                            <div class="col-md-3">
                                <label for="SitePrices_UseStoredProcedure">Use Stored Procedure</label>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <hr />

                <fieldset>
                    <legend>Competitor Sites</legend>

                    <div class="container">
                        <div class="row">
                            <div class="col-md-1">
                                @if (Model.DiagnosticsSettings.CompetitorPrices_UseStoredProcedure)
                                {
                                    <input type="checkbox" name="CompetitorPrices_UseStoredProcedure" id="CompetitorPrices_UseStoredProcedure" value="True" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="CompetitorPrices_UseStoredProcedure" id="CompetitorPrices_UseStoredProcedure" value="True" />
                                }
                            </div>
                            <div class="col-md-3">
                                <label for="CompetitorPrices_UseStoredProcedure">Use Stored Procedure</label>
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>

            <div class="panel-footer">
                <button type="submit" name="btnSubmitSettings" id="btnSubmitSettings" class="btn btn-danger pull-right"><i class="fa fa-check"></i> Update Settings</button>
                <div class="clearfix"></div>
            </div>
        </div>
    }

    <!-- app settings -->
    <div class="panel panel-default collapsed" id="AppSettingsPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#AppSettingsPanel" data-infotip="Expand or Collapse panel">App Settings <big class="badge">@Model.AppSettings.Count()</big> <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th>Setting</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.AppSettings)
                    {
                        <tr>
                            <th>@item.Key</th>
                            <td>
                                <div class="auto-horz-scroll">@item.Value</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- core settings -->
    <div class="panel panel-default collapsed" id="CoreSettingsPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#CoreSettingsPanel" data-infotip="Expand or Collapse panel">Core Settings <big class="badge">@(Model.CoreSettings.Count())</big> <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th>Setting</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CoreSettings)
                    {
                        <tr>
                            <td>@item.Key</td>
                            <td>@item.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- environment -->
    <div class="panel panel-default collapsed" id="EnvironmentPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#EnvironmentPanel" data-infotip="Expand or Collapse panel">Environment <big class="badge">@(Model.Environment.Count())</big> <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Environment)
                    {
                        <tr>
                            <td>@item.Key</td>
                            <td>@item.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- file uploads -->
    <div class="panel panel-default collapsed" id="FileUploadsPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#FileUploadsPanel" data-infotip="Expand or Collapse panel">File Uploads <big class="badge">@(Model.FileUploadSummary.TotalFileCount.ToString("N0"))</big> <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed table-dividers">
                <tbody>
                    <tr>
                        <th class="text-center">Total File Count</th>
                        <th class="text-center">Total File Size</th>
                        <th class="text-center" colspan="2">Newest File Date</th>
                        <th class="text-center" colspan="2">Oldest File Date</th>
                    </tr>

                    <tr>
                        <td class="text-center">@Model.FileUploadSummary.TotalFileCount.ToString("N0")</td>
                        <td class="text-center">@Model.FileUploadSummary.TotalFileSize.ToString("N0")</td>
                        @if (Model.FileUploadSummary.NewestDateTime.HasValue)
                        {
                            <td class="text-center">
                                @Model.FileUploadSummary.NewestDateTime.Value.ToString("dd-MMM-yyyy HH:mm:ss")
                            </td>
                            <td class="text-center">
                                @Html.FormatFriendlyTimeAgo(Model.FileUploadSummary.NewestDateTime.Value)
                            </td>
                        } else {
                            <td class="text-center">N/A</td>
                            <td></td>
                        }

                        @if (Model.FileUploadSummary.OldestDateTime.HasValue)
                        {
                            <td class="text-center">
                                @Model.FileUploadSummary.OldestDateTime.Value.ToString("dd-MMM-yyyy HH:mm:ss")
                            </td>
                            <td class="text-center">
                                @Html.FormatFriendlyTimeAgo(Model.FileUploadSummary.OldestDateTime.Value)
                            </td>
                        } else {
                            <td class="text-center">N/A</td>
                            <td></td>
                        }
                    </tr>

                    <tr>
                        <th class="text-center">0 &mdash; 7 Days</th>
                        <th class="text-center">7 &mdash; 30 Days</th>
                        <th class="text-center">30 &mdash; 60 Days</th>
                        <th class="text-center">60 &mdash; 90 Days</th>
                        <th class="text-center">90 Days &mdash; 1 Year</th>
                        <th class="text-center">More than 1 Year</th>
                    </tr>

                    <tr>
                        <td class="text-center">@(Model.FileUploadSummary.FilesInLast7Days)</td>
                        <td class="text-center">@(Model.FileUploadSummary.FilesOlderThan7Days)</td>
                        <td class="text-center">@(Model.FileUploadSummary.FilesOlderThan30Days)</td>
                        <td class="text-center">@(Model.FileUploadSummary.FilesOlderThan60Days)</td>
                        <td class="text-center">@(Model.FileUploadSummary.FilesOlderThan90Days)</td>
                        <td class="text-center">@(Model.FileUploadSummary.FilesOlderThan1Year)</td>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>


    <!-- recent database object changes -->
    <div class="panel panel-default collapsed" id="RecentDatabaseChangesPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#RecentDatabaseChangesPanel" data-infotip="Expand or Collapse panel">Recent Database Object Changes <big class="badge">@(Model.RecentDatabaseObjectsChanges.Count())</big>  <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Schema</th>
                        <th>Name</th>
                        <th>Created</th>
                        <th>Modified</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.RecentDatabaseObjectsChanges)
                    {
                        <tr>
                            <td>@item.Type</td>
                            <td>@item.TypeDescription</td>
                            <td>@item.SchemaName</td>
                            <td>@item.Name</td>
                            <td>@item.CreatedOn</td>
                            <td>@item.ModifiedOn</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- database object summary -->
    <div class="panel panel-default collapsed" id="DatabaseObjectSummaryPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#DatabaseObjectSummaryPanel" data-infotip="Expand or Collapse panel">Database Object Summary <big class="badge">@totalDatabaseObjectCount</big> <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th class="text-center">Default Contraints</th>
                        <th class="text-center">Foreign Keys</th>
                        <th class="text-center">Primary Keys</th>
                        <th class="text-center">User Tables</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="text-center">@Model.DatabaseObjectSummary.DefaultConstraintCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.ForeignKeyCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.PrimaryKeyCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.UserTableCount</td>
                    </tr>

                    <tr>
                        <th class="text-center">Scalar Functions</th>
                        <th class="text-center">Stored Procedures</th>
                        <th class="text-center">Table Functions</th>
                    </tr>

                    <tr>
                        <td class="text-center">@Model.DatabaseObjectSummary.ScalarFunctionCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.StoredProcedureCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.TableFunctionCount</td>
                    </tr>

                    <tr>
                        <th class="text-center">Indexes</th>
                        <th class="text-center">Clustered</th>
                        <th class="text-center">Non-Clustered</th>
                    </tr>

                    <tr>
                        <td class="text-center">@Model.DatabaseObjectSummary.TotalIndexCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.ClusteredIndexCount</td>
                        <td class="text-center">@Model.DatabaseObjectSummary.NonClusteredIndexCount</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>


    <!-- log entries -->
    <div class="panel panel-default collapsed" id="LogEntriesPanel">
        <div class="panel-heading">
            <h5 data-toggle-expand="#LogEntriesPanel" data-infotip="Expand or Collapse panel">Log Entries (User Session Based) <big class="badge">@(Model.LogEntries.Count())</big> <span class="pull-right"><i class="fa fa-2x fa-caret-square-o-down"></i></span></h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th style="width: 20%;"><big>Created</big></th>
                        <th style="width: 10%;"><big>Level</big></th>
                        <th><big>Message</big></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.LogEntries)
                    {
                        <tr>
                            <td><strong>@log.Created</strong></td>
                            <td><strong>@log.Level</strong></td>
                            <td><strong>@log.Message</strong></td>
                        </tr>

                        if (log.Parameters.Count != 0)
                        {
                            <tr>
                                <td class="text-right"><strong>Parameters:</strong></td>
                                <td colspan="2">
                                    <table class="table log-parameters-table">
                                        <tbody>
                                            @foreach (var kvp in log.Parameters)
                                            {
                                                <tr>
                                                    <th>@kvp.Key</th>
                                                    <td><div class="mono auto-horz-scroll">@kvp.Value</div></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                        }

                        if (log.Exception != "N/A")
                        {
                            <tr>
                                <td colspan="3">
                                    <div class="code-listing mono">
                                        <strong>Exception:</strong>
                                        @log.Exception
                                    </div>
                                </td>
                            </tr>
                        }
                        <tr class="divider-row">
                            <td colspan="3"></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="panel-footer">
            @using (Html.BeginForm("ClearLog", "Diagnostics"))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger pull-right"><i class="fa fa-power-off"></i> Clear</button>
            }
            <div class="clearfix"></div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        require(["Diagnostics", "infotips"], function () { })
    </script>
}
