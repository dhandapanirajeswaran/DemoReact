@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.NationalAverageReportContainerViewModel
@{
	ViewBag.Title = "Report - Competitors Price Range";
	
	if (Model !=null && !Model.ForDate.HasValue)
	{
		Model.ForDate = DateTime.Now;
	}

	var requestedDate = Model !=null ? @Model.ForDate.Value.Date.ToString("dd-MMM-yyyy"): null;
}

<style>

      .actualdata {
    height: 500px;
        overflow-y: auto;
        overflow-x: hidden; 
}

       

        .alternativerow:nth-child(2n+1){
    background:#F5F5F5;
    
}
        .alternativerow
        {
            height:35px;
           
    border-bottom:1px solid #b9b2b2
        }


</style>

<div class="row">
    <div class="col-md-6">
        <h1>@ViewBag.Title.</h1>
    </div>
    <div class="col-md-6 text-right" style="padding-top: 20px">
        <input type="button" class="btn btn-primary" id="btnExportReport" value="Export to Excel" />
    </div>
</div>
<hr />

@using (Html.BeginForm("CompetitorsPriceRange", "PriceReports", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-2">
            <label for="For">When:</label>&nbsp;
            <input type="text" class="datepicker form-control" id="For" name="For" value='@requestedDate'>
        </div>
        <div class="col-md-2" style="padding-top: 24px">
            <input type="button" value="View" class="btn btn-success" id="btnViewReport" />
        </div>
    </div>
    <hr />
}

@if (Model != null && Model.NationalAverageReport != null && Model.NationalAverageReport.Fuels.Any() && Model.NationalAverageReport.Fuels.First().Brands.Any())
{
    <!-- Report Data -->

    <div class="divtable" id="tblBrands" >
       
            <div class="row" >
                <div class="col-md-1"  style="width:180px"></div>
                <div class="col-md-1" style="width:290px; text-align:center"> <strong>Avg retails</strong></div>
                <div class="col-md-1" style="width:290px; text-align:center"> <strong>Difference</strong></div>
                <div class="col-md-1" style="width:290px; text-align:center"> <strong>Pricing range</strong></div>
             </div>
            <div class="row">
                <div class="col-md-1" style="width:190px"><strong>@requestedDate</strong></div>
                @for (int i = 0; i < 3; i++)
                {
                    foreach (var fuelType in Model.NationalAverageReport.Fuels)
                    {
                        <div class="col-md-1" style="width:155px"><strong>@fuelType.FuelName</strong></div>
                    }
                }
            </div>
        <hr />
        <div class="actualdata">
            @foreach (var brand in Model.NationalAverageReport.Fuels.First().Brands)
            {
                <div class="alternativerow">
                    <div class="row">
                        <div class="col-md-1" style="width:190px"><strong>@(brand.BrandName) (£)</strong></div>
                        @* Average *@
                        @foreach (var fuelType in Model.NationalAverageReport.Fuels)
                    {
                        var fuelBrand = fuelType.Brands.First(b => b.BrandName == brand.BrandName);
                    <div class="col-md-1" style="width:155px">@((fuelBrand.Average / 10.0).ToString("###0.0"))</div>
                    }
                        @* Difference *@
                        @foreach (var fuelType in Model.NationalAverageReport.Fuels)
                    {
                        var fuelBrand = fuelType.Brands.First(b => b.BrandName.Equals(brand.BrandName, StringComparison.InvariantCultureIgnoreCase));

                        int diff = fuelBrand.Average > 0 ? (fuelBrand.Average - fuelType.SainsburysPrice) : 0;
                        string color = "";
                        if (diff < 0)
                        {
                            color = "red";
                        }
                        else if (diff > 0)
                        {
                            color = "green";
                        }

                    <div class="col-md-1" style="width:155px; color: @color; ">@((diff / 10.0).ToString("###0.0"))</div>
                    }

                        @* Range *@
                        @foreach (var fuelType in Model.NationalAverageReport.Fuels)
                    {
                        var fuelBrand = fuelType.Brands.First(b => brand.BrandName.Equals(b.BrandName, StringComparison.InvariantCultureIgnoreCase));
                    <div class="col-md-1" style="width:155px">@((fuelBrand.Min / 10.0).ToString("###0.0")) - @((fuelBrand.Max / 10.0).ToString("###0.0"))</div>
                    }
                    </div>
                </div>
            }

        </div>
    </div>
}
else
{
   
    <div class="alert alert-info" role="alert">No data found at @requestedDate</div>
}
@section scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/PriceReports/competitorsPriceRange.js?v=1"></script>
}
