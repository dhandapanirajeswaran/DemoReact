@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.NationalAverageReportContainerViewModel
@{
    ViewBag.Title = "Report - National Average with difference";

    if (Model != null && !Model.ForDate.HasValue)
    {
        Model.ForDate = DateTime.Now;
    }

    //var requestedDate = Model != null ? Model.ForDate.Value.Date.ToString("dd-MMM-yyyy") : null;

    var requestedFromDate = Model != null ? Model.FromDate.Value.Date.ToString("dd-MMM-yyyy") : null;
    var requestedToDate = Model != null ? Model.ToDate.Value.Date.ToString("dd-MMM-yyyy") : null;

    var hasData = (Model != null && Model.NationalAverageReport != null && Model.NationalAverageReport.Fuels.First().Brands.Any());

    var reportInformationViewModel = new JsPlc.Ssc.PetrolPricing.Models.ViewModels.ReportInformationViewModel();
    reportInformationViewModel.Introduction = "Report shows the average price of diesel and unleaded for all brands and their variance to Sainsbury's.";

}

<script type="text/javascript">

    $(document).ready(function () {

        if ("@hasData" == "True") {
            $("#btnExportReport").prop("disabled", false);
        }
        else {
            $("#btnExportReport").prop("disabled", true);
        }

    });


</script>
<style>
    .actualdata {
        height: 500px;
        overflow-y: auto;
        overflow-x: hidden;
    }


    .alternativerow:nth-child(2n+1) {
        background: #F5F5F5;
    }

    .alternativerow {
        border-bottom: 1px solid #b9b2b2;
    }
</style>
<div class="row">
    <div class="col-md-6">
        <h1><i class="fa fa-bar-chart"></i> @ViewBag.Title.</h1>
    </div>
    <div class="col-md-6 text-right" style="padding-top: 20px">
        @if (Model != null && Model.NationalAverageReport != null && Model.NationalAverageReport.Fuels.Any())
        {
            <button type="button" class="btn btn-primary" id="btnExportReport"><i class="fa fa-download"></i> Export to Excel</button>
        }
    </div>
</div>
<hr />

@Html.Partial("_ReportIntroduction", reportInformationViewModel)
<div class="alert alert-danger @(string.IsNullOrWhiteSpace(ViewBag.ErrorMessage) ? "hidden" : "")">@ViewBag.ErrorMessage</div>

@using (Html.BeginForm("NationalAverage2", "PriceReports", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-2">
            @*<label for="For">Date of file upload:</label>;
                <input type="text" class="datepicker form-control" id="For" name="For" value='@requestedDate'>*@
            <label for="For">Date of file upload:</label>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <label for="toDate">From Date:</label>

            <input type="text" class="datepicker form-control" id="DateFrom" name="dateTo" value='@requestedFromDate'>
        </div>
        <div class="col-md-2">
            <label for="fromDate">To Date:</label>
            <input type="text" class="datepicker form-control" id="DateTo" name="dateTo" value='@requestedToDate'>
        </div>

        <div class="col-md-1">
            <label>&nbsp;</label>
            <button type="button" class="btn btn-success btn-block" id="btnViewReport"><i class="fa fa-search"></i> View</button>
        </div>
        <div class="col-md-1">
            <label>&nbsp;</label>
            <button type="button" class="btn btn-danger btn-block" id="btnResetReport"><i class="fa fa-power-off"></i> Reset</button>
        </div>

        <div class="col-md-6">
            <div class="alert alert-info">
                <i class="fa fa-info-circle"></i> When selecting the date, please select the <strong>date of the file upload</strong> (i.e. 24th shows the 23rd's data)
            </div>
        </div>
    </div>
}
<hr />
@if (Model != null && Model.NationalAverageReport != null && Model.NationalAverageReport.Fuels.First().Brands.Any())
{
    <!-- Report Data -->

<div class="row">
    @*<div class="text-info text-center col-md-9">
            <h4>Showing data for <big class="text-black text-bold">@(Model.ForDate.Value.AddDays(-1).ToString("dd-MMM-yyyy"))</big>
            which was uploaded on @(Model.ForDate.Value.ToString("dd-MMM-yyyy"))</h4>
        </div>*@
    <div class="text-info text-center col-md-9">
        <h4>
            Showing data from  <big class="text-black text-bold">@(Model.FromDate.Value.AddDays(-1).ToString("dd-MMM-yyyy"))</big> to
            <big class="text-black text-bold">@(Model.ToDate.Value.AddDays(-1).ToString("dd-MMM-yyyy"))</big>
            which was uploaded between  @(Model.FromDate.Value.ToString("dd-MMM-yyyy")) and @(Model.ToDate.Value.ToString("dd-MMM-yyyy"))
        </h4>
    </div>
</div>


    <div class="divtable" style="width:900px;">
        <div class="row" style="font-weight:bold">

            <div class="col-md-1" style="width:250px">Brands</div>
            @foreach (var fuelType in Model.NationalAverageReport.Fuels)
            {
                <div class="col-md-1" style="width:140px">@fuelType.FuelName Avg. (£)</div>

            }
            @foreach (var fuelType in Model.NationalAverageReport.Fuels)
            {
                <div class="col-md-1" style="width:120px">Variance @fuelType.FuelName (£)</div>

            }
            <div class="col-md-1" style="width:120px">Average Variance</div>

        </div>
        <div class="actualdata">
            @foreach (var brand in Model.NationalAverageReport.Fuels.First().Brands)
            {
                <div class="alternativerow">
                    <div class="row">
                        @if (@brand.BrandName == null)
                        {
                            <div class="col-md-1" style="width:890px;height:10px"> @brand.BrandName </div>
                        }
                        else if (@brand.BrandName == "All other independent brands")
                        {
                            <div class="col-md-1" style="width:890px;"><strong>@brand.BrandName</strong></div>
                        }
                        else
                        {
                            <div class="col-md-1" style="width:250px">
                                @if (brand.BrandName == "SAINSBURYS")
                                {
                                    <strong style="color: orange">@brand.BrandName</strong>
                                }
                                else if (brand.BrandName == "Total Independents")
                                {
                                    <strong>@brand.BrandName</strong>
                                }
                                else
                                {
                                    <span>@brand.BrandName</span>
                                }
                            </div>
                            foreach (var fuelType in Model.NationalAverageReport.Fuels)
                            {
                                var brandfromFType = @fuelType.Brands.Where(x => x.BrandName == @brand.BrandName).FirstOrDefault();

                                <div class="col-md-1" style="width:140px"> @((brandfromFType.Average / 10.0).ToString("###0.00")) </div>

                            }

                            var average = 0.0;
                            foreach (var fuelType in Model.NationalAverageReport.Fuels)
                            {
                                var brandfromFType = @fuelType.Brands.Where(x => x.BrandName == @brand.BrandName).FirstOrDefault();
                                var diff = brandfromFType.Average > 0 ? (brandfromFType.Average - fuelType.SainsburysPrice) : 0.0;
                                string color = 0 > diff ? "red" : diff > 0 ? "green" : "";

                                average += diff;
                                <div class="col-md-1" style="width:120px;color:@color">@((diff / 10.0).ToString("###0.00"))</div>
                            }
                            average = average / 2;
                            string averagecolor = 0 > average ? "red" : average > 0 ? "green" : "";

                            <div class="col-md-1" style="width:120px;color:@averagecolor">@((average / 10.0).ToString("###0.00"))</div>
                        }

                    </div>
                </div>

            }
        </div>

    </div>
}
else
{
    foreach (var fuelType in Model.NationalAverageReport.Fuels)
    {
        @*<div class="alert alert-info" role="alert">No <strong>@fuelType.FuelName</strong> data found at @requestedFromDate </div>*@
        <div class="alert alert-info" role="alert">No <strong>@fuelType.FuelName</strong> data found between date @requestedToDate and @requestedFromDate  </div>

    }
}

@Html.Partial("_BackToReports")

@section scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/PriceReports/nationalAverage.js"></script>
}
