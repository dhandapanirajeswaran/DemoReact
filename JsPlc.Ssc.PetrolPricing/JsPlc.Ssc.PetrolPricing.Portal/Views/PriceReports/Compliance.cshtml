@using System.Web.UI.WebControls
@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.ComplianceReportContainerViewModel
@{
	ViewBag.Title = "Report - Compliance of sites on selected date";
	
    if (!Model.ForDate.HasValue)
    {
        Model.ForDate = DateTime.Now;
    }

    var requestedForDate = @Model.ForDate.Value.Date.ToString("dd-MMM-yyyy");
}
<style>
    .diffColored {
        min-width: 20px;
    }

    .diffNa {
        background-color: silver;
    }

    .diffNegative {
        background-color: lightcoral;
    }

    .diffPositive {
        background-color: orange;
    }

    .diffZero {
        background-color: lightgreen;
    }

    .spacedLeftRight5px td {
        padding-left: 5px;
        padding-right: 5px;
    }
</style>

<div class="row">
    <div class="col-md-7">
        <h1>@ViewBag.Title.</h1>
    </div>
    <div class="col-md-5 right">
        <table border="1">
            <thead>
                <tr>
                    <th colspan="8">
                        <center>
                            Key
                        </center>
                    </th>
                </tr>
            </thead>
            <tbody class="spacedLeftRight5px">
                <tr>
                    <td class="diffZero diffColored"></td>
                    <td>Complies</td>
                    <td class="diffNegative diffColored"></td>
                    <td>Negative value</td>
                    <td class="diffPositive diffColored"></td>
                    <td>Positive value</td>
                    <td class="diffNa diffColored"></td>
                    <td>Not available</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<hr />

<div class="report">
    <div id="errorMsgs" style="color: red"></div>
    <div id="msgs"></div>
    @using (Html.BeginForm("Compliance", "PriceReports", FormMethod.Get, new { onkeydown = "return event.keyCode!=13", onsubmit = "return false" }))
    {
        <div class="row">
            <div class="col-md-2">
                <label for="DateFor">Date:</label>&nbsp;
                <input type="text" class="datepicker form-control" id="DateFor" name="dateFor" value='@requestedForDate'>
            </div>
            <div class="col-md-1" style="padding-top: 24px">
                <input type="button" value="View" class="btn btn-success" id="btnViewReport" />
            </div>
        </div>
    }

    @if (Model.ComplianceReport != null && Model.ComplianceReport.ReportRows.Any())
    {
        <hr />
        <!-- Report Data -->
        <table class="table table-hover table-responsive table-striped">
            <thead>
                <tr>
                    <th rowspan="2">PfsNo</th>
                    <th rowspan="2">CatNo</th>
                    <th rowspan="2">StoreNo</th>
                    <th rowspan="2">SiteName</th>
                    @foreach (var fuel in Model.ComplianceReport.ReportRows.First().DataItems.Select(x => x.FuelTypeName).Take(2))
                    {
                        <th colspan="3"><center>@(fuel)</center></th>
                    }
                </tr>
                <tr>
                    <th>Cat Unleaded</th>
                    <th>Expected</th>
                    <th>Diff</th>

                    <th>Cat Diesel</th>
                    <th>Expected</th>
                    <th>Diff</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var siteRow in Model.ComplianceReport.ReportRows)
                {
                    <tr>
                        <td>@siteRow.PfsNo</td>
                        <td>@siteRow.CatNo</td>
                        <td>@siteRow.StoreNo</td>
                        <td>@siteRow.SiteName</td>
                        @if (!siteRow.DataItems.Any())
                        {
                            <td colspan="9">There is no data available for site</td>
                        }
                        @foreach (var dataItem in siteRow.DataItems.Take(2)) // 3 dataItems for 3 fuels, each with data per fuel
                        {
                            var diffClassName = !dataItem.DiffValid ? "diffNa"
                                :
                                dataItem.Diff > 0 ? "diffPositive"
                                :
                                dataItem.Diff < 0 ? "diffNegative" : "diffZero"; // diffNa, diffNegative, diffPositive, diffZero

                            <td>@( dataItem.FoundCatPrice ? (dataItem.CatPriceValue / 10.0).ToString("###0.0") : "n/a")</td>
                            <td>@( dataItem.FoundExpectedPrice ? (dataItem.ExpectedPriceValue / 10.0).ToString("###0.0") : "n/a")</td>
                            <td class="@diffClassName">@( dataItem.DiffValid ? dataItem.Diff.ToString("0.0") : "n/a")</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/PriceReports/compliance.js"></script>
}