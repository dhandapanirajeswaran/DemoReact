@using System.Web.UI.WebControls
@model JsPlc.Ssc.PetrolPricing.Models.ViewModels.PriceMovementReportContainerViewModel
@{
    ViewBag.Title = "Report - Price Movement within selected dates";

    if (Model != null && !Model.FromDate.HasValue)
    {
        Model.FromDate = DateTime.Now;
    }
    if (Model != null && !Model.ToDate.HasValue)
    {
        Model.ToDate = DateTime.Now;
    }

    var requestedFromDate = Model != null ? @Model.FromDate.Value.Date.ToString("dd-MMM-yyyy") : null;
    var requestedToDate = Model != null ? @Model.ToDate.Value.Date.ToString("dd-MMM-yyyy") : null;


    var reportWidth = Model != null ? (Model.ReportWidth * 0.75) + "px" : "auto";

    var reportInformationViewModel = new JsPlc.Ssc.PetrolPricing.Models.ViewModels.ReportInformationViewModel();
    reportInformationViewModel.Introduction = "Tracks retail prices of individual sites over a specified period.";

}


<script type="text/javascript">
    $(document).ready(function () {
        $('#Brand,#DateFrom,#DateTo,#SiteName,#FuelTypeId').on('keyup', submitOnEnter);
    });

    function submitOnEnter(e) {
        if (e.which == 13)
            $("#btnViewReport").click();
    };

    function runScript(e) {
        if (e.keyCode == 13) {
            $("#btnViewReport").click();
            return false;
        }
    }

    $('.datepicker')
           .datepicker({
               language: "en-GB",
               format: 'dd/mm/yyyy',
               orientation: 'auto top',
               autoclose: true,
               todayHighlight: true,
               endDate: '1d'
           }).on('changeDate', function (e) {
               $("#btnViewReport").click();
           });

</script>

<style>
    .actualdata {
        max-height: 500px;
        overflow-y: auto;
        overflow-x: hidden;
    }

    .divtable {
        overflow-y: hidden;
        overflow-x: auto;
    }

    .fixed-col-1 {
        width: 220px;
    }
    .value-col {
        width: 100px;
        text-align: center;
    }

    .alternativerow:nth-child(2n+1) {
        background: #F5F5F5;
    }

    .alternativerow {
        border-bottom: 1px solid #b9b2b2;
    }
    .zero {
        color: #999;
    }
    .fuel-price-1,
    .fuel-price-2,
    .fuel-price-6 {display: none;}

    .show-fuel-1 .fuel-price-1,
    .show-fuel-2 .fuel-price-2,
    .show-fuel-6 .fuel-price-6 {display: inline;}

    .show-fuel-1.hide-zeros .zero,
    .show-fuel-2.hide-zeros .zero,
    .show-fuel-6.hide-zeros .zero {display: none;}


</style>

<div class="row">
    <div class="col-md-6">
        <h1><i class="fa fa-bar-chart"></i> @ViewBag.Title</h1>
    </div>
    <div class="col-md-6 text-right" style="padding-top: 20px">
        @if (Model != null && Model.FuelTypeId != 0)
        {
            <button type="button" class="btn btn-primary" id="btnExportReport"><i class="fa fa-download"></i> Export to Excel</button>
        }
    </div>
</div>

<hr />

@Html.Partial("_ReportIntroduction", reportInformationViewModel)

<div class="alert alert-danger @(string.IsNullOrWhiteSpace(ViewBag.ErrorMessage) ? "hidden" : "")">@ViewBag.ErrorMessage</div>
<hr />

<div class="report">
    @if (Model != null)
    {
        <div id="errorMsgs" style="color: red"></div>
        <div id="msgs"></div>
        using (Html.BeginForm("PriceMovement", "PriceReports", FormMethod.Get, new { onkeydown = "return event.keyCode!=13", onsubmit = "return false" }))
        {
            <div class="row">
                <div class="col-md-2">
                    <label for="Brand">Brand:</label>
                    @Html.DropDownListFor(d => d.Brand, Model.Brands.Select(b => new SelectListItem { Value = b, Text = b, Selected = b == Model.Brand }), null, new { @class = "form-control" })
                </div>
                <div class="col-md-2">
                    <label for="DateFrom">From:</label>
                    <input type="text" class="datepicker form-control" id="DateFrom" name="dateFrom" value='@requestedFromDate'>

                </div>
                <div class="col-md-2">
                    <label for="DateTo">To:</label>
                    <input type="text" class="datepicker form-control" id="DateTo" name="dateTo" value='@requestedToDate'>

                </div>
                <div class="col-md-2">
                    <label for="SiteName">Site:</label>
                    <input type="text" class="form-control" id="SiteName" name="SiteName" onkeypress="return runScript(event)" value='@Model.SiteName'>

                </div>
                <div class="col-md-1 col-md-offset-2">
                    <label>&nbsp;</label>
                    <button type="button" class="btn btn-success btn-block" id="btnViewReport"><i class="fa fa-search"></i> View</button>
                </div>
                <div class="col-md-1">
                    <label>&nbsp;</label>
                    <button type="button" class="btn btn-danger btn-block" id="btnResetReport"><i class="fa fa-power-off"></i> Reset</button>
                </div>
            </div>
        }
    }

    @if (Model != null && Model.FuelTypeId > 0)
    {
        <hr />
        <div class="row form-horizontal">
            <div class="col-md-7">
                <h4><br />
                    @Model.Brand price movement
                    From: @Model.FromDate.Value.ToString("dd-MMM-yyyy") - To: @Model.ToDate.Value.ToString("dd-MMM-yyyy")
                </h4>
            </div>
            <div class="col-md-3">
                <label>Fuel Type:</label>
                @Html.DropDownListFor(d => d.FuelTypeId, Model.FuelTypes.Select(b => new SelectListItem { Value = b.Key.ToString(), Text = b.Value, Selected = b.Key == Model.FuelTypeId }), null, new { @class = "form-control" })
            </div>

            <div class="col-md-2">
                <label>Zero values:</label><br />
                <button id="btnShowZeroValues" class="btn btn-primary btn-sm"><i class="fa fa-check-square-o"></i> Show</button>
                <button id="btnHideZeroValues" class="btn btn-default btn-sm"><i class="fa fa-square-o"></i> Hide</button>
            </div>
        </div>
        <br />

        if (Model.PriceMovementReport != null)
        {
            <!-- Report Data -->
            <div class="divtable">
                <div id="tableDiv" style="width: @(reportWidth)" class="show-fuel-2">
                    <div class="row" style="font-weight:bold">
                        <div class="col-md-1 fixed-col-1" style="width:250px">Sites</div>

                        @if (Model.PriceMovementReport.ReportRows.Count == 0 || !Model.PriceMovementReport.ReportRows.First().DataItems.Any())
                        {
                            <div class="col-md-1 fixed-col-1">Status</div>
                        }
                        else
                        {
                            foreach (var date in Model.PriceMovementReport.ReportRows.First().DataItems.Select(x => x.PriceDate))
                            {
                                <div class="col-md-1 value-col">@(date.DayOfWeek.ToString())<br />@(date.ToString("dd-MMM-yy"))</div>
                            }
                        }
                    </div>
                    <div class="actualdata">
                        @foreach (var siteRow in Model.PriceMovementReport.ReportRows)
                        {
                            <div class="alternativerow">

                                <div class="row">
                                    <div class="col-md-1 fixed-col-1" style="width:250px">
                                        @siteRow.SiteName
                                    </div>
                                    @if (!siteRow.DataItems.Any())
                                    {
                                        <div class="col-md-1 fixed-col-1" style="width:1100px">There is no data available</div>
                                    }
                                    @foreach (var dataItem in siteRow.DataItems)
                                    {
                                        <div class="col-md-1 value-col">
                                            @foreach (var fuelPrice in dataItem.FuelPrices)
                                            {
                                                var price = fuelPrice.PriceValue;
                                                var value = (price / 10.0).ToString("###0.0");
                                                var css = "fuel-price-" + fuelPrice.FuelTypeId + (value == "0.0" ? " zero" : "");
                                                <span class="@(css)">@(value)</span>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="row">
            <div class="col-md-12 text-center"><strong>Sorry, There is no data available</strong></div>
        </div>
    }
</div>

@Html.Partial("_BackToReports")

@section scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/PriceReports/priceMovement.js"></script>
}